server:
  port: ${PORT}
  reactive:
    session:
      cookie:
        name: SESSION
        http-only: true
        secure: true
        same-site: Lax

spring:
  application:
    name: auth-gateway

  session:
    store-type: redis
    timeout: P6DT23H
    redis:
      repository-type: indexed
      namespace: authgw:sessions
      flush-mode: on-save

  data:
    redis:
      host: auth-gateway-redis
      port: 6379
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.admin.base-url}/realms/${keycloak.admin.realm}
      client:
        registration:
          auth-gateway:
            provider: keycloak
            client-id: ${keycloak.admin.client-id}
            client-secret: ${keycloak.admin.client-secret}
            authorization-grant-type: authorization_code
            scope: openid, profile, email
            redirect-uri: '{baseUrl}/login/oauth2/code/{registrationId}'
        provider:
          keycloak:
            issuer-uri: ${keycloak.admin.base-url}/realms/${keycloak.admin.realm}
            user-name-attribute: preferred_username

  cloud:
    gateway:
      default-filters:
        - TokenRelay
        - CorrelationId
      routes:
        - id: internal-gateway
          uri: ${mochafund.internal-gateway.uri}
          predicates:
            - Path=/api/**
          filters:
            - RemoveRequestHeader=Cookie
            - RemoveResponseHeader=Set-Cookie

logging:
  level:
    org.springframework.web.reactive.function.client: INFO

management:
  endpoints:
    web:
      exposure:
        include: health, info

keycloak:
  admin:
    base-url: ${KEYCLOAK_BASE_URI}
    realm: ${KEYCLOAK_ENVIRONMENT}
    client-id: auth-gateway
    client-secret: ${AUTH_GATEWAY_CLIENT_SECRET}

mochafund:
  internal-gateway:
    uri: ${INTERNAL_GATEWAY_URI}